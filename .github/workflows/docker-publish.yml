name: Docker

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo BGG_API_URL=${{ secrets.BGG_API_URL }} >> .env
          echo BGG_API_ENDPOINT_BOARDGAME=${{ secrets.BGG_API_ENDPOINT_BOARDGAME }} >> .env
          echo GATHERING_API_URL=${{ secrets.GATHERING_API_URL }} >> .env
          echo GATHERING_API_URL_NODATA=${{ secrets.GATHERING_API_URL_NODATA }} >> .env
          echo PRICE_LOOKUP_URL=${{ secrets.PRICE_LOOKUP_URL }} >> .env
          echo LOG_DESTINATION=${{ secrets.LOG_DESTINATION }} >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
